@plugin '@tailwindcss/typography';

.prose {
  --tw-prose-body: color-mix(in oklab, var(--color-foreground) 90%, transparent);
  --tw-prose-headings: var(--color-foreground);
  --tw-prose-lead: var(--color-foreground);
  --tw-prose-links: var(--color-foreground);
  --tw-prose-bold: var(--color-foreground);
  --tw-prose-counters: var(--color-muted-foreground);
  --tw-prose-bullets: var(--color-muted-foreground);
  --tw-prose-hr: var(--color-border);
  --tw-prose-quotes: var(--color-foreground);
  --tw-prose-quote-borders: var(--color-border);
  --tw-prose-captions: var(--color-foreground);
  --tw-prose-th-borders: var(--color-border);
  --tw-prose-td-borders: var(--color-border);
  --tw-prose-code: var(--color-foreground);

  & {
    max-width: none;
  }

  :where(img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin: 0 auto;
  }

  :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding: 2px 4px;
    font-size: 13px;
    border-radius: 6px;
    background: color-mix(in oklab, var(--color-secondary) 50%, transparent);
    border: 1px solid hsl(var(--border));

    &::before,
    &::after {
      display: none;
    }
  }

  :where(blockquote):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-style: normal;

    p {
      &:first-of-type::before,
      &:last-of-type::after {
        content: none;
      }
    }
  }

  :where(video):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 16px;
    margin-bottom: 16px;
  }

  :is(
    :where(h1, h2, h3, h4, h5, h6, th):not(:where([class~='not-prose'], [class~='not-prose'] *))
  ) {
    & a {
      text-decoration: none;
      font-weight: inherit;
      color: inherit;
    }

    & code {
      font-size: inherit;
    }
  }
}
